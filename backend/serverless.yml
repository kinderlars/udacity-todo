service:
  name: serverless-todo-app

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}
  apiGateway:
    shouldStartNameWithService: true

  environment:
    TODOS_TABLE: Todos-${self:provider.stage}
    INDEX_NAME: TodoIndex
    IMAGES_S3_BUCKET: megustacc-serverless-todo-images-${self:provider.stage}
    SIGNED_URL_EXPIRATION: 300
    AUTH_0_JWKS_URL: "https://dev-lb67h78z.eu.auth0.com/.well-known/jwks.json"

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}/index/${self:provider.environment.INDEX_NAME}
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: arn:aws:s3:::${self:provider.environment.IMAGES_S3_BUCKET}/*

functions:

  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

  # TODO: Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          authorizer: Auth
          path: todos



#  # TODO: Configure this function
#  GetTodos:
#  CreateTodo:
#    handler: src/lambda/http/createTodo.handler
#    events:
#      - http:
#          method: post
#          path: todos
#
#  # TODO: Configure this function
#  UpdateTodo:
#    handler: src/lambda/http/updateTodo.handler
#    events:
#      - http:
#          method: patch
#          path: todos/{todoId}
#
#  # TODO: Configure this function
#  DeleteTodo:
#    handler: src/lambda/http/deleteTodo.handler
#    events:
#      - http:
#          method: delete
#          path: todos/{todoId}
#
#  # TODO: Configure this function
#  GenerateUploadUrl:
#    handler: src/lambda/http/generateUploadUrl.handler
#    events:
#      - http:
#          method: post
#          path: todos/{todoId}/attachment

resources:
  Resources:

    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: partitionKey
            AttributeType: S
          - AttributeName: sortKey
            AttributeType: S
          - AttributeName: indexKey
            AttributeType: S
        KeySchema:
          - AttributeName: partitionKey
            KeyType: HASH
          - AttributeName: sortKey
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.TODOS_TABLE}
        LocalSecondaryIndexes:
          - IndexName: ${self:provider.environment.INDEX_NAME}
            KeySchema:
              - AttributeName: partitionKey
                KeyType: HASH
              - AttributeName: indexKey
                KeyType: RANGE
            Projection:
              ProjectionType: ALL # What attributes will be copied to an index

